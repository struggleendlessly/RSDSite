@using Microsoft.AspNetCore.Components.Forms

<div class="container">
    <div class="row">
        <div class="col-6">
            <div class="col-12">
                @if (Model.Data != null)
                {
                    <h5>@Model.Data[StaticStrings.AdminPageDataLogoLabelKey]</h5>
                    <ImageEditor EditorId="@StaticHtmlStrings.ImageEditorAdminLogoId"
                                 Model="Model"
                                 FuncSave="Save"
                                 Key="@StaticStrings.AdminPageDataLogoKey">
                        <img src="@Model.Data[StaticStrings.AdminPageDataLogoKey]" alt="Logo image" style="max-height:100px;" />
                    </ImageEditor>
                }
            </div>
            <hr />
            <div class="col-12 mt-5">
                @if (Model.Data != null)
                {
                    <h5>@Model.Data[StaticStrings.AdminPageDataFooterTextLabelKey]</h5>
                    <HTMLEditor EditorId="@StaticHtmlStrings.HTMLEditorAdminFooterTextId"
                                Model="Model"
                                FuncSave="Save"
                                Key="@StaticStrings.AdminPageDataFooterTextKey">
                        <p>@Model.Data[StaticStrings.AdminPageDataFooterTextKey]</p>
                    </HTMLEditor>
                }
            </div>
            <hr />
            <div class="col-12 mt-5">
                @if (Model.Data != null)
                {
                    <h5>@Model.Data[StaticStrings.AdminPageDataFooterSocialNetworksLabelKey]</h5>
                    <SocialNetworks></SocialNetworks>
                }
            </div>
            <hr />
            <div class="col-12 mt-5">
                @if (Model.Data != null)
                {
                    <h5>@Model.Data[StaticStrings.AdminPageDataHeaderMenuLabelKey]</h5>
                }
                @if (MenuModel.Data != null)
                {
                    <HTMLEditor EditorId="@StaticHtmlStrings.HTMLEditorAdminSettingsMenuMainId"
                                Model="MenuModel"
                                FuncSave="SaveMenu"
                                Key="@StaticStrings.AdminPageSettingsMenuDataMainKey">
                        <p>Main page text: @MenuModel.Data[StaticStrings.AdminPageSettingsMenuDataMainKey]</p>
                    </HTMLEditor>
                    <HTMLEditor EditorId="@StaticHtmlStrings.HTMLEditorAdminSettingsMenuAboutUsId"
                                Model="MenuModel"
                                FuncSave="SaveMenu"
                                Key="@StaticStrings.AdminPageSettingsMenuDataAboutUsKey">
                        <p>About us page text: @MenuModel.Data[StaticStrings.AdminPageSettingsMenuDataAboutUsKey]</p>
                    </HTMLEditor>
                    <HTMLEditor EditorId="@StaticHtmlStrings.HTMLEditorAdminSettingsMenuContactUsId"
                                Model="MenuModel"
                                FuncSave="SaveMenu"
                                Key="@StaticStrings.AdminPageSettingsMenuDataContactUsKey">
                        <p>Contact us page text: @MenuModel.Data[StaticStrings.AdminPageSettingsMenuDataContactUsKey]</p>
                    </HTMLEditor>
                    <HTMLEditor EditorId="@StaticHtmlStrings.HTMLEditorAdminSettingsMenuServicesId"
                                Model="MenuModel"
                                FuncSave="SaveMenu"
                                Key="@StaticStrings.AdminPageSettingsMenuDataServicesKey">
                        <p>Services page text: @MenuModel.Data[StaticStrings.AdminPageSettingsMenuDataServicesKey]</p>
                    </HTMLEditor>
                }
            </div>
            <hr />
            <div class="col-12 mt-5">
                @if (Model.Data != null)
                {
                    <h5>@Model.Data[StaticStrings.AdminPageDataServicesButtonTextLabelKey]</h5>
                    <HTMLEditor EditorId="@StaticHtmlStrings.HTMLEditorAdminServicesButtonTextId"
                                Model="Model"
                                FuncSave="Save"
                                Key="@StaticStrings.AdminPageDataServicesButtonTextKey">
                        <p>@Model.Data[StaticStrings.AdminPageDataServicesButtonTextKey]</p>
                    </HTMLEditor>
                }
            </div>
        </div>
        <div class="col-6">
            @if (Model.Data != null)
            {
                <h5>@Model.Data[StaticStrings.AdminPageDataContactUsMessagesLabelKey]</h5>
            }
            @if (ContactUsMessages.Any())
            {
                <div class="accordion" id="accordionContactUsMessages">
                    @for (int i = 0; i < ContactUsMessages.Count; i++)
                    {
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@i" aria-expanded="true" aria-controls="collapse-@i">
                                    @($"{ContactUsMessages[i].FirstName} {ContactUsMessages[i].LastName} ({ContactUsMessages[i].Email})")
                                </button>
                            </h2>
                            <div id="collapse-@i" class="accordion-collapse collapse" data-bs-parent="#accordionContactUsMessages">
                                <div class="accordion-body">
                                    <p>First name and Last name: @ContactUsMessages[i].FirstName @ContactUsMessages[i].LastName</p>
                                    <p>Email: @ContactUsMessages[i].Email</p>
                                    <p>Phone: @ContactUsMessages[i].PhoneNumber</p>
                                    <p>Details: @ContactUsMessages[i].Details</p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="alert alert-light text-center" role="alert">
                    There are no messages...
                </div>
            }
            <hr />
            <div class="row">
                <div class="col-12 mb-3">
                    <h5>Create site</h5>
                    <EditForm Model="CreateSiteModel" method="post" OnValidSubmit="CreateSite" FormName="createSite">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger" role="alert" />
                        @if (!string.IsNullOrWhiteSpace(CreateSiteMessage))
                        {
                            <div class="alert alert-success" role="alert">
                                @CreateSiteMessage
                            </div>
                        }
                        <div class="form-floating">
                            <label for="createSiteName">Name</label>
                            <input @bind="CreateSiteModel.Name" type="text" class="form-control form-control-sm" id="createSiteName" placeholder="Your site name" aria-label="Your site name" required />
                            <ValidationMessage For="() => CreateSiteModel.Name" class="invalid-feedback" />
                        </div>
                        <button class="w-100 btn btn-sm btn-primary mt-2" type="submit">Create</button>
                    </EditForm>
                </div>
                <hr />
                <div class="col-12 mb-3">
                    <h5>Change site</h5>
                    <select @bind="SelectedSite" class="form-select" aria-label="Change site">
                        @foreach (var site in StateManager.UserSites)
                        {
                            <option value="@site">@site</option>
                        }
                    </select>
                    <button @onclick="ChangeSite" class="w-100 btn btn-sm btn-primary mt-2" type="button">Change</button>
                </div>
                <hr />
                <div class="col-12">
                    <h5>Rename site</h5>
                    <EditForm Model="RenameSiteModel" method="post" OnValidSubmit="RenameSite" FormName="renameSite">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger" role="alert" />
                        @if (!string.IsNullOrWhiteSpace(RenameSiteMessage))
                        {
                            <div class="alert alert-success" role="alert">
                                @RenameSiteMessage
                            </div>
                        }
                        <div class="form-floating">
                            <label for="renameSiteName">Select site</label>
                            <select @bind="RenameSiteModel.SiteName" class="form-select" aria-label="Rename site" required>
                                @foreach (var site in StateManager.UserSites)
                                {
                                    <option value="@site">@site</option>
                                }
                            </select>
                            <ValidationMessage For="() => RenameSiteModel.SiteName" class="invalid-feedback" />
                        </div>
                        <div class="form-floating">
                            <label for="renameNewSiteName">New name</label>
                            <input @bind="RenameSiteModel.NewName" type="text" class="form-control form-control-sm" id="renameNewSiteName" placeholder="Your new site name" aria-label="Your new site name" required />
                            <ValidationMessage For="() => RenameSiteModel.NewName" class="invalid-feedback" />
                        </div>
                        <button class="w-100 btn btn-sm btn-primary mt-2" type="submit">Rename</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>
