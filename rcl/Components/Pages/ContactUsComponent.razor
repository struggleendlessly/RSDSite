@using Microsoft.AspNetCore.Components.Forms

<div class="container">

    <div class="row pb-4">
        <div class="col-lg-6 text-center">

            <div class="mb-5">
                @if (Model.Data != null)
                {
                    <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsTitleId)"
                                EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                                Model="Model"
                                FuncSave="Save"
                                Key="@(StaticStrings.ContactUsPageDataTitleKey)">
                        <h1>@((MarkupString)Model.Data[StaticStrings.ContactUsPageDataTitleKey])</h1>
                    </HTMLEditor>
                    <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsSubtitleId)"
                                EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                                Model="Model"
                                FuncSave="Save"
                                Key="@(StaticStrings.ContactUsPageDataSubtitleKey)">
                        <p>@((MarkupString)Model.Data[StaticStrings.ContactUsPageDataSubtitleKey])</p>
                    </HTMLEditor>
                }
            </div>

            @if (Model.Data != null)
            {
                <AuthorizeView>
                    <Authorized>
                        <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsMapCoordinatesId)"
                                    EditorContentFormat="@(StaticStrings.EditorContentFormatText)"
                                    Model="Model"
                                    FuncSave="Save"
                                    Key="@(StaticStrings.ContactUsPageDatMapCoordinatesKey)">
                            <p>Map coordinates: @(Model.Data[StaticStrings.ContactUsPageDatMapCoordinatesKey])</p>
                        </HTMLEditor>
                        <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsMapMarkerTextId)"
                                    EditorContentFormat="@(StaticStrings.EditorContentFormatText)"
                                    Model="Model"
                                    FuncSave="Save"
                                    Key="@(StaticStrings.ContactUsPageDataMapMarkerTextKey)">
                            <p>Map marker text: @(Model.Data[StaticStrings.ContactUsPageDataMapMarkerTextKey])</p>
                        </HTMLEditor>
                    </Authorized>
                </AuthorizeView>
            }

            <!-- MAP HERE -->
            <div id="map" class="mb-5" style="height: 350px;"></div>
            
            <div class="row">
                <div class="col-sm-6">
                    @if (Model.Data != null)
                    {
                        <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsCallUsTitleId)"
                                    EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                                    Model="Model"
                                    FuncSave="Save"
                                    Key="@(StaticStrings.ContactUsPageDataCallUsTitleKey)">
                            <h5 class="mb-1">
                                @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataCallUsTitleKey])
                            </h5>
                        </HTMLEditor>
                        <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsCallUsSubtitleId)"
                                    EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                                    Model="Model"
                                    FuncSave="Save"
                                    Key="@(StaticStrings.ContactUsPageDataCallUsSubtitleKey)">
                            <p>@((MarkupString)Model.Data[StaticStrings.ContactUsPageDataCallUsSubtitleKey])</p>
                        </HTMLEditor>
                    }
                </div>


                <div class="col-sm-6">
                    @if (Model.Data != null)
                    {
                        <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsEmailUsTitleId)"
                                    EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                                    Model="Model"
                                    FuncSave="Save"
                                    Key="@(StaticStrings.ContactUsPageDataEmailUsTitleKey)">
                            <h5 class="mb-1">
                                @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataEmailUsTitleKey])
                            </h5>
                        </HTMLEditor>
                        <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsEmailUsSubtitleId)"
                                    EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                                    Model="Model"
                                    FuncSave="Save"
                                    Key="@(StaticStrings.ContactUsPageDataEmailUsSubtitleKey)">
                            <p>@((MarkupString)Model.Data[StaticStrings.ContactUsPageDataEmailUsSubtitleKey])</p>
                        </HTMLEditor>
                    }
                </div>


                <div class="col-sm-6">
                    @if (Model.Data != null)
                    {
                        <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsAddressTitleId)"
                                    EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                                    Model="Model"
                                    FuncSave="Save"
                                    Key="@(StaticStrings.ContactUsPageDataAddressTitleKey)">
                            <h5 class="mb-1">
                                @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataAddressTitleKey])
                            </h5>
                        </HTMLEditor>
                        <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsAddressSubtitleId)"
                                    EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                                    Model="Model"
                                    FuncSave="Save"
                                    Key="@(StaticStrings.ContactUsPageDataAddressSubtitleKey)">
                            <p>@((MarkupString)Model.Data[StaticStrings.ContactUsPageDataAddressSubtitleKey])</p>
                        </HTMLEditor>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-6 text-center">
            <div class="card h-100">
                <div class="card-body">
                    @if (Model.Data != null)
                    {
                        <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsFormTitleId)"
                                    EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                                    Model="Model"
                                    FuncSave="Save"
                                    Key="@(StaticStrings.ContactUsPageDataFormTitleKey)">
                            <h5 class="card-title">@((MarkupString)Model.Data[StaticStrings.ContactUsPageDataFormTitleKey])</h5>
                        </HTMLEditor>
                    }
                    <p class="card-text">
                        <EditForm Model="Input" method="post" OnValidSubmit="SubmitForm" FormName="contact-us">
                            <DataAnnotationsValidator />
                            <ValidationSummary class="text-danger" role="alert" />
                            @if (!string.IsNullOrWhiteSpace(Message))
                            {
                                <div class="alert alert-success" role="alert">
                                    @Message
                                </div>
                            }
                            <div class="row gx-3">
                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="contactUsFormFirstName">First name</label>
                                        <InputText @bind-Value="Input.FirstName" type="text" class="form-control form-control-lg" 
                                            id="contactUsFormFirstName" placeholder="First name" aria-label="First name" required />
                                        <ValidationMessage For="() => Input.FirstName" class="invalid-feedback" />
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="contactUsFormLastName">Last name</label>
                                        <InputText @bind-Value="Input.LastName" type="text" class="form-control form-control-lg" 
                                            id="contactUsFormLastName" placeholder="Last name" aria-label="Last name" required />
                                        <ValidationMessage For="() => Input.LastName" class="invalid-feedback" />
                                    </div>
                                </div>
                            </div>
                            <div class="row gx-3">
                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="contactUsFormEmail">Email address</label>
                                        <InputText @bind-Value="Input.Email" type="email" class="form-control form-control-lg"
                                            id="contactUsFormEmail" placeholder="email@site.com" aria-label="email@site.com" required />
                                        <ValidationMessage For="() => Input.Email" class="invalid-feedback" />
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="mb-3">
                                        <label class="form-label" for="contactUsFormPhone">
                                            Phone <span class="form-label-secondary">(Optional)</span>
                                        </label>
                                        <InputText @bind-Value="Input.PhoneNumber" type="text" class="form-control form-control-lg"
                                               id="contactUsFormPhone" placeholder="+x(xxx)xxx-xx-xx" aria-label="+x(xxx)xxx-xx-xx" />
                                        <ValidationMessage For="() => Input.PhoneNumber" class="invalid-feedback" />
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label" for="contactUsFormDetails">Details</label>
                                <InputText @bind-Value="Input.Details" class="form-control form-control-lg" id="contactUsFormDetails"
                                           placeholder="Tell us about your ..." aria-label="Tell us about your ..." rows="4" required></InputText>
                            </div>
                            <div class="d-grid">
                                @if (Model.Data != null)
                                {
                                    <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsFormButtonTextId)"
                                                EditorContentFormat="@(StaticStrings.EditorContentFormatText)"
                                                Model="Model"
                                                FuncSave="Save"
                                                Key="@(StaticStrings.ContactUsPageDataFormButtonTextKey)">
                                        <button type="submit" class="btn btn-primary btn-lg">
                                            @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataFormButtonTextKey])
                                        </button>
                                    </HTMLEditor>
                                }
                            </div>
                            <div class="text-center">
                                @if (Model.Data != null)
                                {
                                    <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsFormTextUnderButtonKey)"
                                                EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                                                Model="Model"
                                                FuncSave="Save"
                                                Key="@(StaticStrings.ContactUsPageDataFormTextUnderButtonKey)">
                                        <p class="form-text">
                                            @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataFormTextUnderButtonKey])
                                        </p>
                                    </HTMLEditor>
                                }
                            </div>
                        </EditForm>
                    </p>
                </div>
            </div>
        </div>
    </div>


</div>

<div class="border-top mx-auto pb-4" style="max-width: 25rem;"></div>
