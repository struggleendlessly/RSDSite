@using Microsoft.AspNetCore.Components.Forms

<div class="px-2 py-1 text-center container">
    @if (Model.Data is not null && PopoversModel.Data is not null && LocalizationModel.Data is not null)
    {
        <!-- CSSMainTitle_h1 -->
        <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsTitleId)"
                    EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                    Model="Model"
                    FuncSave="Save"
                    Key="@(StaticStrings.ContactUsPageDataTitleKey)"
                    PopoversModel="PopoversModel"
                    PopoverKey="@StaticStrings.Popover_ContactUs_1_Title">
            <h1 class="@StaticHtmlStrings.CSSMainTitle_h1">
                @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataTitleKey])
            </h1>
        </HTMLEditor>

        <!-- CSSMainSubTitle_p -->
        <div class="col-lg-6 mx-auto pb-1">
            <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsSubtitleId)"
                        EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                        Model="Model"
                        FuncSave="Save"
                        Key="@(StaticStrings.ContactUsPageDataSubtitleKey)"
                        PopoversModel="PopoversModel"
                        PopoverKey="@StaticStrings.Popover_ContactUs_1_Subtitle">
                <p class="@StaticHtmlStrings.CSSMainSubTitle_p">
                    @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataSubtitleKey])
                </p>
            </HTMLEditor>
        </div>

        <div class="row justify-content-lg-center my-5">
            <!-- Email -->
            <div class="col-sm-4 col-lg-3 mb-5 text-center">
                <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsEmailUsTitleId)"
                            EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                            Model="Model"
                            FuncSave="Save"
                            Key="@(StaticStrings.ContactUsPageDataEmailUsTitleKey)"
                            PopoversModel="PopoversModel"
                            PopoverKey="@StaticStrings.Popover_ContactUs_1_1_Contact">
                    <h5 class="mb-1">
                        @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataEmailUsTitleKey])
                    </h5>
                </HTMLEditor>
                <TextEditor EditorId="@StaticHtmlStrings.HTMLEditorContactUsEmailUsSubtitleId"
                            EditorType="@(StaticStrings.TextEditorTypeEmail)"
                            Model="Model"
                            FuncSave="Save"
                            Key="@StaticStrings.ContactUsPageDataEmailUsSubtitleKey">
                    <a class="text-decoration-none" href="mailto:@Model.Data[StaticStrings.ContactUsPageDataEmailUsSubtitleKey]">
                        @Model.Data[StaticStrings.ContactUsPageDataEmailUsSubtitleKey]
                    </a>
                </TextEditor>
            </div>

            <!-- Call -->
            <div class="col-sm-4 col-lg-3 mb-5 text-center">
                <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsCallUsTitleId)"
                            EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                            Model="Model"
                            FuncSave="Save"
                            Key="@(StaticStrings.ContactUsPageDataCallUsTitleKey)"
                            PopoversModel="PopoversModel"
                            PopoverKey="@StaticStrings.Popover_ContactUs_1_2_Contact">
                    <h5 class="mb-1">
                        @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataCallUsTitleKey])
                    </h5>
                </HTMLEditor>
                <TextEditor EditorId="@StaticHtmlStrings.HTMLEditorContactUsCallUsSubtitleId"
                            EditorType="@(StaticStrings.TextEditorTypePhone)"
                            Model="Model"
                            FuncSave="Save"
                            Key="@StaticStrings.ContactUsPageDataCallUsSubtitleKey">
                    <a class="text-decoration-none" href="tel:@Model.Data[StaticStrings.ContactUsPageDataCallUsSubtitleKey]">
                        @Model.Data[StaticStrings.ContactUsPageDataCallUsSubtitleKey]
                    </a>
                </TextEditor>
            </div>

            <!-- Address -->
            <div class="col-sm-4 col-lg-3 mb-5 text-center">
                <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsAddressTitleId)"
                            EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                            Model="Model"
                            FuncSave="Save"
                            Key="@(StaticStrings.ContactUsPageDataAddressTitleKey)"
                            PopoversModel="PopoversModel"
                            PopoverKey="@StaticStrings.Popover_ContactUs_1_3_Contact">
                    <h5 class="mb-1">
                        @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataAddressTitleKey])
                    </h5>
                </HTMLEditor>
                <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsAddressSubtitleId)"
                            EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                            Model="Model"
                            FuncSave="Save"
                            Key="@(StaticStrings.ContactUsPageDataAddressSubtitleKey)">
                    @if (!string.IsNullOrWhiteSpace(Model.Data[StaticStrings.ContactUsPageDatMapCoordinatesKey]))
                    {
                        var href = $"https://www.google.com/maps/place/{Model.Data[StaticStrings.ContactUsPageDatMapCoordinatesKey]}";
                        <a class="text-decoration-none" href="@href" target="_blank">
                            @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataAddressSubtitleKey])
                        </a>
                    }
                    else
                    {
                        <p>@((MarkupString)Model.Data[StaticStrings.ContactUsPageDataAddressSubtitleKey])</p>
                    }
                </HTMLEditor>
            </div>
        </div>

        <div class="row mb-5 ">
            <div class="col-lg-6 text-center mb-5 mb-sm-5 mb-lg-0 px-4">
                <AuthorizeView>
                    <Authorized>
                        @if (StateManager.CanEditSite())
                        {
                            <TextEditor EditorId="@StaticHtmlStrings.HTMLEditorContactUsMapCoordinatesId"
                                        EditorType="@(StaticStrings.TextEditorTypeText)"
                                        Model="Model"
                                        FuncSave="Save"
                                        Key="@StaticStrings.ContactUsPageDatMapCoordinatesKey"
                                        PopoversModel="PopoversModel"
                                        PopoverKey="@StaticStrings.Popover_ContactUs_1_1_Map">
                                <p>@LocalizationModel.Data[StaticStrings.Localization_ContactUs_Map_Coordinates_Key]: @Model.Data[StaticStrings.ContactUsPageDatMapCoordinatesKey]</p>
                            </TextEditor>

                            <TextEditor EditorId="@StaticHtmlStrings.HTMLEditorContactUsMapMarkerTextId"
                                        EditorType="@(StaticStrings.TextEditorTypeText)"
                                        Model="Model"
                                        FuncSave="Save"
                                        Key="@StaticStrings.ContactUsPageDataMapMarkerTextKey"
                                        PopoversModel="PopoversModel"
                                        PopoverKey="@StaticStrings.Popover_ContactUs_1_2_Map">
                                <p>@LocalizationModel.Data[StaticStrings.Localization_ContactUs_Map_MarkerText_Key]: @Model.Data[StaticStrings.ContactUsPageDataMapMarkerTextKey]</p>
                            </TextEditor>
                        }
                    </Authorized>
                </AuthorizeView>

                <!-- MAP HERE -->
                <div id="map" class="rounded" style="height: 536px;"></div>
            </div>

            <div class="col-lg-6 text-center">
                <div class="card h-100">
                    <div class="card-body">
                        <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsFormTitleId)"
                                    EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                                    Model="Model"
                                    FuncSave="Save"
                                    Key="@(StaticStrings.ContactUsPageDataFormTitleKey)"
                                    PopoversModel="PopoversModel"
                                    PopoverKey="@StaticStrings.Popover_ContactUs_1_1_Form">
                            <h5 class="card-title">
                                @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataFormTitleKey])
                            </h5>
                        </HTMLEditor>

                        <p class="card-text">
                            <div class="alert d-none" role="alert" id="@StaticHtmlStrings.ContactUsFormAlertId">
                            </div>
                            <EditForm Model="Input" method="post" OnValidSubmit="SubmitForm" FormName="contact-us">
                                <DataAnnotationsValidator />
                                <ValidationSummary class="text-danger" role="alert" />
                                <div class="row gx-3">
                                    <div class="col-sm-6">
                                        <div class="mb-3">
                                            <label class="form-label" for="contactUsFormFirstName">
                                                @LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_FirstName_Label_Key]
                                            </label>
                                            <InputText @bind-Value="Input.FirstName"
                                                       type="text"
                                                       class="form-control form-control-lg"
                                                       id="contactUsFormFirstName"
                                                       placeholder="@LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_FirstName_Placeholder_Key]"
                                                       aria-label="@LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_FirstName_Placeholder_Key]"
                                                       required />
                                            <ValidationMessage For="() => Input.FirstName" class="invalid-feedback" />
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="mb-3">
                                            <label class="form-label" for="contactUsFormLastName">
                                                @LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_LastName_Label_Key]
                                            </label>
                                            <InputText @bind-Value="Input.LastName"
                                                       type="text"
                                                       class="form-control form-control-lg"
                                                       id="contactUsFormLastName"
                                                       placeholder="@LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_LastName_Placeholder_Key]"
                                                       aria-label="@LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_LastName_Placeholder_Key]"
                                                       required />
                                            <ValidationMessage For="() => Input.LastName" class="invalid-feedback" />
                                        </div>
                                    </div>
                                </div>

                                <div class="row gx-3">
                                    <div class="col-sm-6">
                                        <div class="mb-3">
                                            <label class="form-label" for="contactUsFormEmail">
                                                @LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_Email_Label_Key]
                                            </label>
                                            <InputText @bind-Value="Input.Email"
                                                       type="email" class="form-control form-control-lg"
                                                       id="contactUsFormEmail"
                                                       placeholder="@LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_Email_Placeholder_Key]"
                                                       aria-label="@LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_Email_Placeholder_Key]"
                                                       required />
                                            <ValidationMessage For="() => Input.Email" class="invalid-feedback" />
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="mb-3">
                                            <label class="form-label" for="contactUsFormPhone">
                                                @LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_Phone_Label_Key]
                                            </label>
                                            <InputText @bind-Value="Input.PhoneNumber"
                                                       type="text"
                                                       class="form-control form-control-lg"
                                                       id="contactUsFormPhone"
                                                       placeholder="@LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_Phone_Placeholder_Key]"
                                                       aria-label="@LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_Phone_Placeholder_Key]" />
                                            <ValidationMessage For="() => Input.PhoneNumber" class="invalid-feedback" />
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label" for="contactUsFormDetails">
                                        @LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_Details_Label_Key]
                                    </label>
                                    <InputTextArea @bind-Value="Input.Details"
                                                   class="form-control form-control-lg"
                                                   id="contactUsFormDetails"
                                                   placeholder="@LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_Details_Placeholder_Key]"
                                                   aria-label="@LocalizationModel.Data[StaticStrings.Localization_ContactUs_Form_Details_Placeholder_Key]"
                                                   rows="4"
                                                   required>
                                    </InputTextArea>
                                </div>

                                <div class="d-grid">
                                    <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsFormButtonTextId)"
                                                EditorContentFormat="@(StaticStrings.EditorContentFormatText)"
                                                Model="Model"
                                                FuncSave="Save"
                                                Key="@(StaticStrings.ContactUsPageDataFormButtonTextKey)"
                                                PopoversModel="PopoversModel"
                                                PopoverKey="@StaticStrings.Popover_ContactUs_1_2_Form">
                                        <button type="submit" class="@StaticHtmlStrings.CSSButtonDarkInTheText">
                                            @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataFormButtonTextKey])
                                        </button>
                                    </HTMLEditor>
                                </div>

                                <div class="text-center">
                                    <HTMLEditor EditorId="@(StaticHtmlStrings.HTMLEditorContactUsFormTextUnderButtonKey)"
                                                EditorContentFormat="@(StaticStrings.EditorContentFormatHtml)"
                                                Model="Model"
                                                FuncSave="Save"
                                                Key="@(StaticStrings.ContactUsPageDataFormTextUnderButtonKey)"
                                                PopoversModel="PopoversModel"
                                                PopoverKey="@StaticStrings.Popover_ContactUs_1_3_Form">
                                        <p class="form-text">
                                            @((MarkupString)Model.Data[StaticStrings.ContactUsPageDataFormTextUnderButtonKey])
                                        </p>
                                    </HTMLEditor>
                                </div>
                            </EditForm>

                        </p>
                    </div>
                </div>
            </div>
        </div>
    }
</div>