<AuthorizeView>
    <Authorized>
        @if (SettingsModel.Data is not null && StateManager.CanEditSite())
        {
            <div>
                <!-- Edit -->
                <button type="button" class="btn btn-outline-primary m-2"
                        data-bs-toggle="modal" data-bs-target="#Modal@(EditorId)">

                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                        <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325"></path>
                    </svg>
                </button>
                @if (PopoversModel is not null && PopoversModel.Data is not null && !string.IsNullOrWhiteSpace(PopoverKey))
                {
                    <!-- Popover -->
                    var popoverImageKey = PopoverKey + StaticStrings.ImageKeyEnding;
                    var popoverTextKey = PopoverKey + StaticStrings.TextKeyEnding;
                    var popoverLinkKey = PopoverKey + StaticStrings.LinkKeyEnding;

                    var popoverHtml = $"<img src='{PopoversModel.Data[popoverImageKey]}'></img>" 
                        + $"<p>{PopoversModel.Data[popoverTextKey]}</p>" 
                        + $"<a href='{PopoversModel.Data[popoverLinkKey]}'>Link</a>";

                    <button type="button" class="btn btn-outline-info" data-bs-toggle="popover"
                            data-bs-html="true" data-bs-title="Description" data-bs-content="@popoverHtml">

                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle" viewBox="0 0 16 16">
                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                            <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0" />
                        </svg>
                    </button>
                }
            </div>

            <!-- Modal -->
            <div class="modal fade" id="Modal@(EditorId)" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header border-0">
                            <h1 class="modal-title fs-5" id="exampleModalLabel">Text editor</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div class="modal-body">
                            <!-- HTML editor body -->
                            <input @bind="Value" type="@EditorType" class="form-control" id="@EditorId" />
                        </div>

                        <div class="modal-footer border-0">
                            <!-- Save -->
                            <button class="btn btn-outline-success"
                                    data-bs-dismiss="modal"
                                    @onclick="SaveChangesAsync">
                                @SettingsModel.Data[StaticStrings.AdminPageDataHTMLEditorSaveButtonTextKey]
                            </button>

                            <!-- Cancel -->
                            <button class="btn btn-outline-dark" 
                                    data-bs-dismiss="modal">
                                @SettingsModel.Data[StaticStrings.AdminPageDataHTMLEditorCancelButtonTextKey]
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </Authorized>
</AuthorizeView>

@ChildContent