@using shared.Helpers

<AuthorizeView>
    <Authorized>
        @if (LocalizationModel.Data is not null && StateManager.CanEditSite())
        {
            <div class="text-center">
                @if (PopoversModel is not null && PopoversModel.Data is not null && !string.IsNullOrWhiteSpace(PopoverKey))
                {
                    <Popover 
                        PopoversModel="PopoversModel"
                        PopoverKey="@PopoverKey">
                    </Popover>
                }
                <div class="form-signin input-group input-group-sm mb-1">
                    <input type="file"
                           style=""
                           class="form-control"
                           id="@EditorId"
                           aria-describedby="inputGroupFileAddon"
                           aria-label="Save"
                           accept="image/*"
                           disabled="@isSaving" />

                    <button class="btn btn-outline-success"
                            type="button"
                            id="inputGroupFileAddon"
                            @onclick="SaveChangesAsync"
                            disabled="@isSaving">

                        @if (isSaving)
                        {
                            <span class="spinner-border spinner-border-sm" aria-hidden="true"></span>
                        }
                        else
                        {
                            @LocalizationModel.Data[StaticStrings.Localization_ImageEditor_Button_Save_Key]
                        }

                    </button>
                </div>
                @if (AllowVisibilityChange)
                {
                    <VisibilityEditor 
                        EditorId="@EditorId"
                        Model="Model"
                        FuncSave="FuncSave"
                        Key="@Key">
                    </VisibilityEditor>
                }
            </div>
        }
    </Authorized>
</AuthorizeView>

@if (VisibilityHelpers.IsVisible(Model.Data, Key))
{
    @ChildContent
}
