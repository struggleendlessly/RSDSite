@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using web.Data
@using shared

@attribute [Route(StaticRoutesStrings.ForgotPasswordPageRoute)]

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Forgot your password?</PageTitle>

<!-- ========== MAIN CONTENT ========== -->
<main id="content" role="main">
    <!-- Form -->
    <div class="container content-space-3 content-space-t-lg-4 content-space-b-lg-3">
        <div class="flex-grow-1 mx-auto" style="max-width: 28rem;">
            <!-- Heading -->
            <div class="text-center mb-5 mb-md-7">
                <h1 class="h2">Forgot password?</h1>
                <p>Enter your email address below and we'll get you back on track.</p>
            </div>
            <!-- End Heading -->
            <!-- Form -->
            <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />
                <!-- Form -->
                <div class="mb-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <label class="form-label" for="signupSimpleResetPasswordEmail" tabindex="0">Your email</label>

                        <a class="form-label-link" href="@(StaticRoutesStrings.LoginPageRoute)">
                            <i class="bi-chevron-left small ms-1"></i> Back to Log in
                        </a>
                    </div>

                    <InputText @bind-Value="Input.Email" type="email" class="form-control form-control-lg" id="signupSimpleResetPasswordEmail" tabindex="1" placeholder="Enter your email address" aria-label="Enter your email address" required />
                    <ValidationMessage For="() => Input.Email" class="invalid-feedback" />
                </div>
                <!-- End Form -->

                <div class="d-grid mb-3">
                    <button type="submit" class="btn btn-primary btn-lg">Submit</button>
                </div>
            </EditForm>
            <!-- End Form -->
        </div>
    </div>
    <!-- End Form -->
</main>
<!-- ========== END MAIN CONTENT ========== -->

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            // Don't reveal that the user does not exist or is not confirmed
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }

        // For more information on how to enable account confirmation and password reset please
        // visit https://go.microsoft.com/fwlink/?LinkID=532713
        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
